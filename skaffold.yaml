apiVersion: skaffold/v1beta13
kind: Config
build:
  artifacts:
    - image: substrafoundation/substra-backend
      context: .
      docker:
        dockerfile: docker/substra-backend/Dockerfile

    - image: substrafoundation/celerybeat
      context: .
      docker:
        dockerfile: docker/celerybeat/Dockerfile

    - image: substrafoundation/celeryworker
      context: .
      docker:
        dockerfile: docker/celeryworker/Dockerfile

    - image: substrafoundation/flower
      context: .
      docker:
        dockerfile: docker/flower/Dockerfile

deploy:
  helm:
    releases:
      - name: substra-backend-peer-1
        chartPath: charts/substra-backend
        namespace: peer-1
        imageStrategy:
          helm: {}
        values:
          backend.image: substrafoundation/substra-backend
          celerybeat.image: substrafoundation/celerybeat
          celeryworker.image: substrafoundation/celeryworker
          flower.image: substrafoundation/flower
        overrides:
          secrets:
            fabricConfigmap: network-peer-1-hlf-k8s-fabric
          backend:
            settings: dev
            defaultDomain: http://substra-backend.node-1
            ingress:
              enabled: true
              hosts:
                - { host: substra-backend.node-1, paths: ["/"] }
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
                nginx.ingress.kubernetes.io/proxy-body-size: 100m
            auth:
              user: node-1
              password: node-1pwd
              header: "Basic bm9kZS0xOm5vZGUtMXB3ZA=="
          organization:
            name: MyPeer1
          peer:
            host: network-peer-1.peer-1
            port: 7051
            mspID: MyPeer1MSP
          orderer:
            host: network-orderer.orderer
            port: 7050
            name: MyOrderer
          persistence:
            hostPath: /tmp/peer-1
          incomingNodes:
            - { name: MyPeer1MSP, secret: selfSecret1 }
            - { name: MyPeer2MSP, secret: nodeSecret2 }
          outgoingNodes:
            - { name: MyPeer1MSP, secret: selfSecret1 }
            - { name: MyPeer2MSP, secret: nodeSecret1 }

      - name: substra-backend-peer-2
        chartPath: charts/substra-backend
        namespace: peer-2
        imageStrategy:
          helm: {}
        values:
          backend.image: substrafoundation/substra-backend
          celerybeat.image: substrafoundation/celerybeat
          celeryworker.image: substrafoundation/celeryworker
          flower.image: substrafoundation/flower
        overrides:
          secrets:
            fabricConfigmap: network-peer-2-hlf-k8s-fabric
          backend:
            settings: dev
            defaultDomain: http://substra-backend.node-2
            ingress:
              enabled: true
              hosts:
                - { host: substra-backend.node-2, paths: ["/"] }
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
                nginx.ingress.kubernetes.io/proxy-body-size: 100m
            auth:
              user: node-2
              password: node-2pwd
              header: "Basic bm9kZS0yOm5vZGUtMnB3ZA=="
          organization:
            name: MyPeer1
          peer:
            host: network-peer-2.peer-2
            port: 7051
            mspID: MyPeer2MSP
          orderer:
            host: network-orderer.orderer
            port: 7050
            name: MyOrderer
          persistence:
            hostPath: /tmp/peer-2
          incomingNodes:
            - { name: MyPeer1MSP, secret: nodeSecret1 }
            - { name: MyPeer2MSP, secret: selfSecret2 }
          outgoingNodes:
            - { name: MyPeer1MSP, secret: nodeSecret2 }
            - { name: MyPeer2MSP, secret: selfSecret2 }
